package gui;

import java.util.List;
import javax.swing.JOptionPane;
import pojos.User;

public class MainFrame extends javax.swing.JFrame {

    private List<User> users;
    private User user;
    private int selIndex = -1;

    public MainFrame() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Event Recorder Software");
        initOrUpdateDataAndView();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnExperiments = new javax.swing.JButton();
        btnAddUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlUsers = new javax.swing.JList();
        btnRenameUser = new javax.swing.JButton();
        btnKeysets = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnExperiments.setText("Experiments");
        btnExperiments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExperimentsActionPerformed(evt);
            }
        });

        btnAddUser.setText("Add user");
        btnAddUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setText("Delete user");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        jlUsers.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jlUsers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlUsers.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jlUsers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlUsersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlUsers);

        btnRenameUser.setText("Rename user");
        btnRenameUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRenameUserActionPerformed(evt);
            }
        });

        btnKeysets.setText("Manage Keysets");
        btnKeysets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeysetsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnExperiments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRenameUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnKeysets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddUser)
                        .addGap(18, 18, 18)
                        .addComponent(btnRenameUser)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnKeysets)
                        .addGap(18, 18, 18)
                        .addComponent(btnExperiments)))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExperimentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExperimentsActionPerformed
        if (jlUsers.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to continue.", "No user is selected", JOptionPane.INFORMATION_MESSAGE);
        } else {
            ExperimentsDialog ed = new ExperimentsDialog(this, users.get(jlUsers.getSelectedIndex()));
            ed.setVisible(true);
            initOrUpdateDataAndView();
        }
    }//GEN-LAST:event_btnExperimentsActionPerformed

    private void jlUsersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlUsersValueChanged
        selIndex = jlUsers.getSelectedIndex();
        if (selIndex == -1) {
            user = null;
            btnExperiments.setEnabled(false);
            btnDeleteUser.setEnabled(false);
            btnKeysets.setEnabled(false);
        } else {
            user = users.get(selIndex);
            btnExperiments.setEnabled(true);
            btnDeleteUser.setEnabled(true);
            btnKeysets.setEnabled(true);
        }
    }//GEN-LAST:event_jlUsersValueChanged

    private void btnAddUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUserActionPerformed
        EditUserDialog eud = new EditUserDialog(this, users, true, -1);
        eud.setVisible(true);
        initOrUpdateDataAndView();
    }//GEN-LAST:event_btnAddUserActionPerformed

    private void btnRenameUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRenameUserActionPerformed
        if (jlUsers.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to rename.", "No selected user", JOptionPane.ERROR_MESSAGE);
        } else {
            int editedIndex = selIndex;
            EditUserDialog eud = new EditUserDialog(this, users, false, selIndex);
            eud.setVisible(true);
            initOrUpdateDataAndView();
            jlUsers.setSelectedIndex(editedIndex);
        }
    }//GEN-LAST:event_btnRenameUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        if (jlUsers.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user to be deleted.", "No selected user", JOptionPane.ERROR_MESSAGE);
        } else if (user.getExperiments() != null && user.getExperiments().size() > 0) {
            JOptionPane.showMessageDialog(this, "This user can not be deleted. Please delete his or her saved experiments first.", "User can not be deleted", JOptionPane.ERROR_MESSAGE);
        } else if (user.getKeysets() != null && user.getKeysets().size() > 0) {
            JOptionPane.showMessageDialog(this, "This user can not be deleted. Please delete his or her saved keysets first.", "User can not be deleted", JOptionPane.ERROR_MESSAGE);
        } else if (JOptionPane.YES_OPTION
                == JOptionPane.showConfirmDialog(this, "Are you sure you want to delete user " + user.getName() + "?", "Confirm deletion", JOptionPane.YES_NO_OPTION)) {
            hibernate.HibernateMethods.deleteUser(user);
            initOrUpdateDataAndView();
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnKeysetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeysetsActionPerformed
        KeysetDialog kld = new KeysetDialog(this, user);
        kld.setVisible(true);
        initOrUpdateDataAndView();
    }//GEN-LAST:event_btnKeysetsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnExperiments;
    private javax.swing.JButton btnKeysets;
    private javax.swing.JButton btnRenameUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList jlUsers;
    // End of variables declaration//GEN-END:variables

    private void initOrUpdateDataAndView() {
        users = hibernate.HibernateMethods.getUsers();
        if (users != null) {
            jlUsers.setListData(users.toArray());
            jlUsers.repaint();
        }
        user = null;
        btnExperiments.setEnabled(false);
        btnDeleteUser.setEnabled(false);
        btnKeysets.setEnabled(false);
    }
}
